{"version":3,"sources":["Searchbar/Searchbar.js","ImageGallery/ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Loader/Loader.js","services/imagesApi.js","LoadMoreBtn/LoadMoreBtn.js","Modal/Modal.js","App.js","index.js"],"names":["INITAL_STATE","searchQuery","Searchbar","state","handelChange","value","target","setState","formSubmit","e","setSearchQuery","props","preventDefault","reset","this","className","onSubmit","type","placeholder","onChange","Component","defaultProps","ImageGalleryItem","source","alt","callModal","largeImageURL","onClick","src","ImageGallery","images","map","id","webformatURL","tags","key","override","css","Loader","size","color","page","axios","get","then","response","data","hits","LoadMoreBtn","onButttonClick","Modal","url","closeModal","role","App","isLoading","error","query","fetchImagesFromApi","fetchImages","prevState","catch","finally","setLargeImageToModal","removeLargeImageToModal","prevProps","currentList","document","querySelector","window","scrollTo","top","documentElement","scrollHeight","behavior","message","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd4873d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITAL_STATE = {\r\n  searchQuery: '',\r\n};\r\n\r\nclass Searchbar extends Component {\r\n  static defaultProps = {\r\n    setSearchQuery: () => {},\r\n  };\r\n\r\n  state = {\r\n    ...INITAL_STATE,\r\n  };\r\n\r\n  handelChange = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({ searchQuery: value });\r\n  };\r\n\r\n  formSubmit = e => {\r\n    const { searchQuery } = this.state;\r\n    const { setSearchQuery } = this.props;\r\n    e.preventDefault();\r\n    setSearchQuery(searchQuery);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.formSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            // autoComplete=\"off\"\r\n            // autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchQuery}\r\n            onChange={this.handelChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nSearchbar.propTypes = {\r\n  setSearchQuery: PropTypes.func,\r\n};\r\nexport default Searchbar;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport React from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ source, alt, callModal, largeImageURL }) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\r\n    <li className=\"ImageGalleryItem\" onClick={() => callModal(largeImageURL)}>\r\n      <img src={source} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  source: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  callModal: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, callModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          source={webformatURL}\r\n          alt={tags}\r\n          largeImageURL={largeImageURL}\r\n          callModal={callModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  callModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { css } from '@emotion/core';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      <ClipLoader css={override} size={150} color=\"#123abc\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?key=17376560-8e441e2d761dd89297db2b9ae&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default {\r\n  fetchImagesWithQuery,\r\n};\r\n","import React from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreBtn = ({ onButttonClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={() => onButttonClick()}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nLoadMoreBtn.propTypes = {\r\n  onButttonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ url, closeModal }) => {\r\n  return (\r\n    <div className=\"Overlay\" onClick={() => closeModal()} role=\"presentation\">\r\n      <div className=\"Modal\">\r\n        <img src={url} alt=\"Large\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport './styles.css';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Loader from './Loader/Loader';\nimport fetchImages from './services/imagesApi';\nimport LoadMoreBtn from './LoadMoreBtn/LoadMoreBtn';\nimport Modal from './Modal/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    error: null,\n    largeImageURL: '',\n    query: '',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    const prevQuery = prevState.query;\n    const nextQuery = query;\n    if (prevQuery !== nextQuery) {\n      this.fetchImagesFromApi();\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    const { page } = this.state;\n    const currentList = document.querySelector('.ImageGallery');\n    if (page >= 3 && currentList) {\n      // console.log();\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n    return null;\n  }\n\n  fetchImagesFromApi = () => {\n    const { query, page } = this.state;\n    this.setState({ isLoading: true });\n    fetchImages\n      .fetchImagesWithQuery(query, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  setLargeImageToModal = url => {\n    this.setState({ largeImageURL: url });\n  };\n\n  removeLargeImageToModal = () => {\n    this.setState({ largeImageURL: '' });\n  };\n\n  setSearchQuery = query => {\n    this.setState({ query, page: 1, images: [] });\n  };\n\n  render() {\n    const { images, isLoading, error, largeImageURL } = this.state;\n\n    return (\n      <>\n        <Searchbar setSearchQuery={this.setSearchQuery} />\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n        {isLoading && <Loader />}\n        {images.length > 0 && (\n          <ImageGallery images={images} callModal={this.setLargeImageToModal} />\n        )}\n        {images.length > 0 && (\n          <LoadMoreBtn onButttonClick={this.fetchImagesFromApi} />\n        )}\n        {largeImageURL && (\n          <Modal\n            url={largeImageURL}\n            closeModal={this.removeLargeImageToModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}